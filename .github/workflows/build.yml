name: Build EXE

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Verify tkinter installation
          python -c "import tkinter; print('tkinter version:', tkinter.TkVersion)"
          # Install other dependencies
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create Icon
        run: |
          pip install Pillow
          python create_icon.py

      - name: Build with PyInstaller
        run: |
          # Add tkinter to hidden imports
          pyinstaller --onefile --windowed --icon=app.ico --name=IndexRipper --hidden-import tkinter --hidden-import tkinter.ttk index_ripper.py

      - name: Test executable
        run: |
          # Simple test to check if exe was created
          if (Test-Path "dist/IndexRipper.exe") {
              Write-Host "EXE file created successfully"
          } else {
              Write-Error "EXE file not found"
              exit 1
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: IndexRipper
          path: dist/IndexRipper.exe

      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::v$(date +'%Y.%m.%d_%H%M')"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          files: dist/IndexRipper.exe
          tag_name: ${{ steps.tag.outputs.release_tag }}
          name: Release ${{ steps.tag.outputs.release_tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
